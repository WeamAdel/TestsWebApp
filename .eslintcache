[{"F:\\Web\\work\\test-project\\src\\index.js":"1","F:\\Web\\work\\test-project\\src\\App.js":"2","F:\\Web\\work\\test-project\\src\\reportWebVitals.js":"3","F:\\Web\\work\\test-project\\src\\components\\Auth\\SignIn.js":"4","F:\\Web\\work\\test-project\\src\\components\\Home\\Home.js":"5","F:\\Web\\work\\test-project\\src\\forms\\inputsProps.js":"6","F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\Inputs\\Inputs.js":"7","F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\Inputs\\Input.js":"8","F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\ErrorMessage.js":"9","F:\\Web\\work\\test-project\\src\\components\\Shared\\Button.js":"10","F:\\Web\\work\\test-project\\src\\forms\\validation\\schemas\\auth.js":"11","F:\\Web\\work\\test-project\\src\\forms\\validation\\schemas\\shared.js":"12","F:\\Web\\work\\test-project\\src\\components\\Auth\\SignUp.js":"13","F:\\Web\\work\\test-project\\src\\redux\\ConfigureStore.js":"14","F:\\Web\\work\\test-project\\src\\redux\\auth\\Reducer.js":"15","F:\\Web\\work\\test-project\\src\\redux\\auth\\ActionCreators.js":"16","F:\\Web\\work\\test-project\\src\\redux\\auth\\ActionTypes.js":"17","F:\\Web\\work\\test-project\\src\\redux\\auth\\Utility.js":"18","F:\\Web\\work\\test-project\\src\\components\\Shared\\Spinners\\Spinner.js":"19","F:\\Web\\work\\test-project\\src\\components\\AppWrapper.js":"20","F:\\Web\\work\\test-project\\src\\components\\Shared\\Spinners\\PageSpinner.js":"21","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Dashboard.js":"22","F:\\Web\\work\\test-project\\src\\components\\Layout\\Page.js":"23","F:\\Web\\work\\test-project\\src\\components\\Layout\\Navbar.js":"24","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AddTest\\AddTest.js":"25","F:\\Web\\work\\test-project\\src\\components\\Home\\Slider.js":"26","F:\\Web\\work\\test-project\\src\\components\\Home\\Navbar.js":"27","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AddTest\\QuestionsCounter.js":"28","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AddTest\\AddQuestionBtn.js":"29","F:\\Web\\work\\test-project\\src\\configs\\axios.js":"30","F:\\Web\\work\\test-project\\src\\configs\\firebase.js":"31","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\Tests.js":"32","F:\\Web\\work\\test-project\\src\\components\\Shared\\Toaster.js":"33","F:\\Web\\work\\test-project\\src\\forms\\validation\\schemas\\test.js":"34","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\AdminTests\\AdminTests.js":"35","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\AdminTests\\TestCard.js":"36","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\AdminTests\\RecentAsnswers.js":"37","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\AllTests\\AllTests.js":"38","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\AllTests\\TestCard.js":"39","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AnswerTest\\AnswerTest.js":"40","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AnswerTest\\Question\\Question.js":"41","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AnswerTest\\Question\\Answer.js":"42","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AddTest\\QuestionInput\\Question.js":"43","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AddTest\\QuestionInput\\AnswerInput.js":"44","F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\Inputs\\Radio.js":"45","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AnswerTest\\Result.js":"46","F:\\Web\\work\\test-project\\src\\components\\Errors\\ErrorBoundary.js":"47","F:\\Web\\work\\test-project\\src\\components\\Errors\\Error404.js":"48","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\AdminTests\\NoData.js":"49","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\AllTests\\NoData.js":"50"},{"size":667,"mtime":1609790600690,"results":"51","hashOfConfig":"52"},{"size":1175,"mtime":1610197060568,"results":"53","hashOfConfig":"52"},{"size":362,"mtime":1609752222980,"results":"54","hashOfConfig":"52"},{"size":2148,"mtime":1610196630488,"results":"55","hashOfConfig":"52"},{"size":282,"mtime":1609791650620,"results":"56","hashOfConfig":"52"},{"size":759,"mtime":1610199207507,"results":"57","hashOfConfig":"52"},{"size":611,"mtime":1609770536290,"results":"58","hashOfConfig":"52"},{"size":1112,"mtime":1609957873126,"results":"59","hashOfConfig":"52"},{"size":229,"mtime":1609770561783,"results":"60","hashOfConfig":"52"},{"size":807,"mtime":1610196681182,"results":"61","hashOfConfig":"52"},{"size":350,"mtime":1610199193912,"results":"62","hashOfConfig":"52"},{"size":180,"mtime":1609774703253,"results":"63","hashOfConfig":"52"},{"size":2141,"mtime":1610212225559,"results":"64","hashOfConfig":"52"},{"size":414,"mtime":1609773279890,"results":"65","hashOfConfig":"52"},{"size":1123,"mtime":1610124239764,"results":"66","hashOfConfig":"52"},{"size":3850,"mtime":1610212214362,"results":"67","hashOfConfig":"52"},{"size":338,"mtime":1610014808750,"results":"68","hashOfConfig":"52"},{"size":2070,"mtime":1610129115984,"results":"69","hashOfConfig":"52"},{"size":134,"mtime":1609786753311,"results":"70","hashOfConfig":"52"},{"size":2121,"mtime":1610196935012,"results":"71","hashOfConfig":"52"},{"size":151,"mtime":1609786710459,"results":"72","hashOfConfig":"52"},{"size":1066,"mtime":1610196468918,"results":"73","hashOfConfig":"52"},{"size":287,"mtime":1609786237382,"results":"74","hashOfConfig":"52"},{"size":2869,"mtime":1610196720415,"results":"75","hashOfConfig":"52"},{"size":6404,"mtime":1610141618351,"results":"76","hashOfConfig":"52"},{"size":2242,"mtime":1609937501945,"results":"77","hashOfConfig":"52"},{"size":424,"mtime":1609937554428,"results":"78","hashOfConfig":"52"},{"size":486,"mtime":1609852510547,"results":"79","hashOfConfig":"52"},{"size":375,"mtime":1609853701926,"results":"80","hashOfConfig":"52"},{"size":166,"mtime":1609872730821,"results":"81","hashOfConfig":"52"},{"size":618,"mtime":1609880611506,"results":"82","hashOfConfig":"52"},{"size":1664,"mtime":1610196547389,"results":"83","hashOfConfig":"52"},{"size":601,"mtime":1610196782067,"results":"84","hashOfConfig":"52"},{"size":1380,"mtime":1610157442102,"results":"85","hashOfConfig":"52"},{"size":1030,"mtime":1610212381491,"results":"86","hashOfConfig":"52"},{"size":1362,"mtime":1610126037653,"results":"87","hashOfConfig":"52"},{"size":582,"mtime":1610125393937,"results":"88","hashOfConfig":"52"},{"size":1100,"mtime":1610212496558,"results":"89","hashOfConfig":"52"},{"size":639,"mtime":1610127896061,"results":"90","hashOfConfig":"52"},{"size":4814,"mtime":1610158044228,"results":"91","hashOfConfig":"52"},{"size":1231,"mtime":1610158085226,"results":"92","hashOfConfig":"52"},{"size":792,"mtime":1610158053860,"results":"93","hashOfConfig":"52"},{"size":1778,"mtime":1610141673171,"results":"94","hashOfConfig":"52"},{"size":1774,"mtime":1610143638030,"results":"95","hashOfConfig":"52"},{"size":887,"mtime":1610153557744,"results":"96","hashOfConfig":"52"},{"size":1908,"mtime":1610153679031,"results":"97","hashOfConfig":"52"},{"size":886,"mtime":1610196895051,"results":"98","hashOfConfig":"52"},{"size":660,"mtime":1610197190374,"results":"99","hashOfConfig":"52"},{"size":331,"mtime":1610212377441,"results":"100","hashOfConfig":"52"},{"size":263,"mtime":1610212837422,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1bcvm5r",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"104"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Web\\work\\test-project\\src\\index.js",[],["213","214"],"F:\\Web\\work\\test-project\\src\\App.js",[],"F:\\Web\\work\\test-project\\src\\reportWebVitals.js",[],"F:\\Web\\work\\test-project\\src\\components\\Auth\\SignIn.js",["215"],"F:\\Web\\work\\test-project\\src\\components\\Home\\Home.js",[],"F:\\Web\\work\\test-project\\src\\forms\\inputsProps.js",[],"F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\Inputs\\Inputs.js",[],"F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\Inputs\\Input.js",[],"F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\ErrorMessage.js",[],"F:\\Web\\work\\test-project\\src\\components\\Shared\\Button.js",[],"F:\\Web\\work\\test-project\\src\\forms\\validation\\schemas\\auth.js",[],"F:\\Web\\work\\test-project\\src\\forms\\validation\\schemas\\shared.js",[],"F:\\Web\\work\\test-project\\src\\components\\Auth\\SignUp.js",["216","217","218"],"F:\\Web\\work\\test-project\\src\\redux\\ConfigureStore.js",[],"F:\\Web\\work\\test-project\\src\\redux\\auth\\Reducer.js",[],"F:\\Web\\work\\test-project\\src\\redux\\auth\\ActionCreators.js",["219","220","221"],"F:\\Web\\work\\test-project\\src\\redux\\auth\\ActionTypes.js",[],"F:\\Web\\work\\test-project\\src\\redux\\auth\\Utility.js",[],"F:\\Web\\work\\test-project\\src\\components\\Shared\\Spinners\\Spinner.js",[],"F:\\Web\\work\\test-project\\src\\components\\AppWrapper.js",["222","223","224"],"F:\\Web\\work\\test-project\\src\\components\\Shared\\Spinners\\PageSpinner.js",[],"F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Dashboard.js",["225","226"],"F:\\Web\\work\\test-project\\src\\components\\Layout\\Page.js",[],"F:\\Web\\work\\test-project\\src\\components\\Layout\\Navbar.js",["227","228"],"F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AddTest\\AddTest.js",["229","230","231","232","233"],"import { useState, useEffect } from \"react\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { testSchema } from \"../../../forms/validation/schemas/test\";\r\nimport firebase from \"../../../configs/firebase\";\r\nimport Page from \"../../Layout/Page\";\r\nimport QuestionCounter from \"./QuestionsCounter\";\r\nimport AddQuestionBtn from \"./AddQuestionBtn\";\r\nimport Question from \"./QuestionInput/Question\";\r\nimport Button from \"../../Shared/Button\";\r\nimport Input from \"../../Shared/Forms/Inputs/Input\";\r\nimport Toaster from \"../../Shared/Toaster\";\r\n\r\nconst getDefaultValues = () => {\r\n  return {\r\n    questions: [\r\n      {\r\n        qid: \"q1\",\r\n        question: \"\",\r\n        rightAnswerIndex: \"\",\r\n        answers: [\"\", \"\", \"\", \"\"],\r\n      },\r\n    ],\r\n    name: \"\",\r\n  };\r\n};\r\n\r\nfunction AddTest({ match, app }) {\r\n  const [test, setTest] = useState({\r\n    id: null,\r\n    isLoading: false,\r\n    success: null,\r\n    failed: null,\r\n  });\r\n  const [isEditing, setIsEditing] = useState(null);\r\n\r\n  /* \r\n    This page works as both edit and add test pages, so here\r\n    we are trying to detect that by checking the test :id param.\r\n    If the param exists then it's an edit page and we then try to fetch and \r\n    populate this tests data, and if not we do nothing.\r\n  */\r\n  useEffect(() => {\r\n    const testId = match.params.id;\r\n    if (testId) {\r\n      setTest({\r\n        ...test,\r\n        id: testId,\r\n      });\r\n      setIsEditing(true);\r\n    } else setIsEditing(false);\r\n  }, []);\r\n\r\n  /* \r\n    When the user clicks add test(in navbar) when already editing one \r\n    i.e editing already saved test, \r\n    the form is reset\r\n  */\r\n  useEffect(() => {\r\n    if (!match.params.id) {\r\n      reset(getDefaultValues());\r\n      setIsEditing(false);\r\n      setTest({\r\n        id: null,\r\n        isLoading: false,\r\n        success: null,\r\n        failed: null,\r\n      });\r\n    }\r\n  }, [match.params.id]);\r\n\r\n  const { register, handleSubmit, errors, control, reset } = useForm({\r\n    resolver: yupResolver(testSchema),\r\n    defaultValues: getDefaultValues(),\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"questions\",\r\n  });\r\n\r\n  useEffect(async () => {\r\n    const testId = match.params.id;\r\n    if (isEditing) {\r\n      const data = await getAPITest(testId);\r\n      reset(data);\r\n    }\r\n  }, [isEditing]);\r\n\r\n  function getAPITest(testId) {\r\n    return firebase\r\n      .database()\r\n      .ref(\"tests/\" + app.uid + \"/\" + testId)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        const data = snapshot.val();\r\n        return data;\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  function onTestSuccuess(testId) {\r\n    setTest({\r\n      ...test,\r\n      id: testId ?? test.id,\r\n      success: true,\r\n      isLoading: false,\r\n    });\r\n    setTimeout(() => {\r\n      setTest({\r\n        ...test,\r\n        success: false,\r\n      });\r\n    }, 2000);\r\n  }\r\n\r\n  function onTestFail(error) {\r\n    console.log(\"Error saving your test:\", error);\r\n  }\r\n\r\n  function doAPISubmitTest(testData) {\r\n    setTest({\r\n      ...test,\r\n      isLoading: true,\r\n    });\r\n\r\n    //If the test already exists update it\r\n    //If it doesn't the create a new one and retrieve its id i.e(response.key)\r\n    if (!test.id) {\r\n      firebase\r\n        .database()\r\n        .ref(`tests/${app.uid}/`)\r\n        .push(testData)\r\n        .then((response) => {\r\n          onTestSuccuess(response.key);\r\n        })\r\n        .catch((error) => {\r\n          onTestFail(error);\r\n        });\r\n    } else {\r\n      firebase\r\n        .database()\r\n        .ref(`tests/${app.uid}/${test.id}`)\r\n        .update(testData)\r\n        .then(() => {\r\n          onTestSuccuess();\r\n        })\r\n        .catch((error) => {\r\n          onTestFail(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  const questionJSX = fields.map((item, index) => {\r\n    const answers = item.answers.map((answer, i) => {\r\n      return {\r\n        name: `questions[${index}].answers[${i}]`,\r\n        defaultValue: answer,\r\n      };\r\n    });\r\n    const questionId = item.qid ?? \"q\" + (index + 1);\r\n\r\n    return (\r\n      <Question\r\n        key={questionId}\r\n        index={index}\r\n        id={questionId}\r\n        question={item.question}\r\n        name={`questions[${index}].question`}\r\n        answers={answers}\r\n        removeQuestion={removeQuestion.bind(this, index)}\r\n        rightAnswer={{\r\n          name: `questions[${index}].rightAnswerIndex`,\r\n          index: +item.rightAnswerIndex,\r\n        }}\r\n        register={register}\r\n        errors={errors?.questions ? errors.questions[index] : null}\r\n      />\r\n    );\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    doAPISubmitTest(data);\r\n  };\r\n\r\n  function addNewQuestion() {\r\n    const quesId = \"q\" + (fields.length + 1);\r\n    const question = {\r\n      qid: quesId,\r\n      question: \"\",\r\n      rightAnswerIndex: \"\",\r\n      answers: [\"\", \"\", \"\", \"\"],\r\n    };\r\n    append(question);\r\n  }\r\n\r\n  function removeQuestion(index) {\r\n    remove(index);\r\n  }\r\n\r\n  return isEditing != null ? (\r\n    <Page classes=\"add-test\">\r\n      <h1>Add Test</h1>\r\n      <Toaster\r\n        type=\"success\"\r\n        isFixed={true}\r\n        message=\"Your test was saved successfully\"\r\n        show={test.success}\r\n      />\r\n      <div className=\"row\">\r\n        <div className=\"col-md-8\">\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Input\r\n              register={register}\r\n              label=\"Test Name\"\r\n              isRequired={true}\r\n              errorMessage={errors.name ? errors.name.message : null}\r\n              placeholder=\"Enter your test name\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              errorMessage={errors?.name ? errors.name.message : null}\r\n            />\r\n            <hr className=\"my-5\" />\r\n            {questionJSX}\r\n            <hr />\r\n            <Button\r\n              title=\"Add Test\"\r\n              classes=\"btn-primary d-block mx-auto\"\r\n              isLoading={test.isLoading}\r\n            />\r\n          </form>\r\n        </div>\r\n        <QuestionCounter counter={fields.length} />\r\n      </div>\r\n      <AddQuestionBtn clicked={addNewQuestion} />\r\n    </Page>\r\n  ) : null;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.auth.app,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AddTest);\r\n","F:\\Web\\work\\test-project\\src\\components\\Home\\Slider.js",[],"F:\\Web\\work\\test-project\\src\\components\\Home\\Navbar.js",[],"F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AddTest\\QuestionsCounter.js",["234"],"import PropTypes from \"prop-types\";\r\n\r\nexport default function QuestionsCounter({ counter }) {\r\n  return (\r\n    <div className=\"col-md-3 offset-md-1 order-md-last order-first mb-5 mb-md-0\">\r\n      <div className=\"q-counter text-center\">\r\n        <img src=\"/assets/images/add-test/question.png\" />\r\n        <p className=\"mb-0\">{counter < 10 ? \"0\" + counter : counter}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuestionsCounter.propTypes = {\r\n  counter: PropTypes.number.isRequired,\r\n};\r\n","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AddTest\\AddQuestionBtn.js",["235"],"import PropTypes from \"prop-types\";\r\n\r\nexport default function AddQuestionBtn({ clicked }) {\r\n  return (\r\n    <button\r\n      title=\"Add new question\"\r\n      className=\"add-question-btn\"\r\n      onClick={clicked}\r\n    >\r\n      <img src=\"/assets/images/add-test/add-btn.svg\" />\r\n    </button>\r\n  );\r\n}\r\n\r\nAddQuestionBtn.propTypes = {\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\n","F:\\Web\\work\\test-project\\src\\configs\\axios.js",[],["236","237"],"F:\\Web\\work\\test-project\\src\\configs\\firebase.js",["238"],"import firebase from \"firebase/app\";\r\nimport database from \"firebase/database\";\r\n\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyDmoM405gtzCzG5nTHLJ5ffWg2tBNRp6Ug\",\r\n  authDomain: \"testswebapp-af51f.firebaseapp.com\",\r\n  databaseURL: \"https://testswebapp-af51f-default-rtdb.firebaseio.com\",\r\n  projectId: \"testswebapp-af51f\",\r\n  storageBucket: \"testswebapp-af51f.appspot.com\",\r\n  messagingSenderId: \"862702560579\",\r\n  appId: \"1:862702560579:web:c1826503fbd6ae7fecbbf6\",\r\n  measurementId: \"G-R8DJBH2Z7W\",\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport default firebase;\r\n","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\Tests.js",["239","240"],"F:\\Web\\work\\test-project\\src\\components\\Shared\\Toaster.js",[],"F:\\Web\\work\\test-project\\src\\forms\\validation\\schemas\\test.js",[],"F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\AdminTests\\AdminTests.js",[],"F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\AdminTests\\TestCard.js",[],"F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\AdminTests\\RecentAsnswers.js",[],"F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\AllTests\\AllTests.js",["241"],"F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\AllTests\\TestCard.js",[],"F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AnswerTest\\AnswerTest.js",["242","243","244","245"],"import { useEffect, useState } from \"react\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { answerTestSchema } from \"../../../forms/validation/schemas/test\";\r\nimport firebase from \"../../../configs/firebase\";\r\nimport Page from \"../../Layout/Page\";\r\nimport Button from \"../../Shared/Button\";\r\nimport PageSpinner from \"../../Shared/Spinners/PageSpinner\";\r\nimport Question from \"./Question/Question\";\r\nimport Result from \"./Result\";\r\n\r\nfunction AnswerTest({ match, userId }) {\r\n  const [test, setTest] = useState({\r\n    data: null,\r\n    error: null,\r\n    isLoading: true,\r\n    isSubmitting: false,\r\n    isAnswered: null,\r\n  });\r\n\r\n  const { register, handleSubmit, errors, reset, control } = useForm({\r\n    defaultValues: {\r\n      answers: [],\r\n    },\r\n    resolver: yupResolver(answerTestSchema),\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  console.log(errors);\r\n\r\n  const { fields } = useFieldArray({\r\n    control,\r\n    name: \"answers\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const testerId = match.params.testerId;\r\n    const testId = match.params.testId;\r\n\r\n    firebase\r\n      .database()\r\n      .ref(`tests/${testerId}/${testId}`)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        const data = snapshot.val();\r\n\r\n        setTest({\r\n          isLoading: false,\r\n          error: false,\r\n          data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setTest({\r\n          ...test,\r\n          isLoading: false,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (test.data) {\r\n      reset({\r\n        answers: Array(test.data.questions.length),\r\n      });\r\n    }\r\n  }, [test.data]);\r\n\r\n  /* \r\n    Here we are creating a copy of all the questions and their answers & right answer,\r\n    (savin the copy of what the user answered in order to prevent teachers from\r\n      manipulating the results later\r\n    ), as well as calculating the total points\r\n  */\r\n\r\n  function createAnswerReport(answers) {\r\n    let points = 0;\r\n    const testQuestions = test.data.questions;\r\n    const questions = [];\r\n\r\n    for (let i = 0; i < test.data.questions.length; i++) {\r\n      const question = testQuestions[i];\r\n      const tempQuestion = { ...question, userAnswerIndex: +answers[i].value };\r\n\r\n      if (+answers[i].value == question.rightAnswerIndex) points += 1;\r\n      questions.push(tempQuestion);\r\n    }\r\n\r\n    return {\r\n      uid: userId,\r\n      questions,\r\n      points,\r\n      final: testQuestions.length,\r\n    };\r\n  }\r\n\r\n  function onSubmit(data) {\r\n    console.log(data);\r\n    const answerReport = createAnswerReport(data.answers);\r\n    console.log(answerReport);\r\n    setTest({\r\n      ...test,\r\n      isSubmitting: true,\r\n    });\r\n\r\n    doAPISubmitAnswer({\r\n      answerReport,\r\n      testId: match.params.testId,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setTest({\r\n          ...test,\r\n          data: {\r\n            name: test.data.name,\r\n            ...answerReport,\r\n          },\r\n          isSubmitting: false,\r\n          isAnswered: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setTest({\r\n          ...test,\r\n          isSubmitting: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  const questionsJSX = test?.data\r\n    ? test.data.questions.map((question, index) => {\r\n        return (\r\n          <Question\r\n            key={index}\r\n            index={index}\r\n            {...question}\r\n            register={register}\r\n            isAnswered={test.isAnswered}\r\n            errorMessage={\r\n              errors?.answers && errors.answers[index]\r\n                ? errors.answers[index].value.message\r\n                : null\r\n            }\r\n          />\r\n        );\r\n      })\r\n    : null;\r\n\r\n  return test.isLoading ? (\r\n    <PageSpinner />\r\n  ) : (\r\n    <Page classes=\"answer-test\">\r\n      <h1>{test.data.name} Test</h1>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <ol className=\"list-unstyled p-0\">{questionsJSX}</ol>\r\n        {!test.isAnswered ? (\r\n          <Button\r\n            title=\"Submit Answer\"\r\n            classes=\"btn-primary d-block mx-auto\"\r\n            isLoading={test.isSubmitting}\r\n          />\r\n        ) : null}\r\n      </form>\r\n      {test.data ? (\r\n        <Result\r\n          points={test.data.points}\r\n          final={test.data.final}\r\n          isAnswered={test.isAnswered}\r\n        />\r\n      ) : null}\r\n    </Page>\r\n  );\r\n}\r\n\r\nasync function doAPISubmitAnswer({ answerReport, testId }) {\r\n  return firebase\r\n    .database()\r\n    .ref(\"answers/\" + testId)\r\n    .push(answerReport);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth.app.uid,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AnswerTest);\r\n","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AnswerTest\\Question\\Question.js",["246","247","248"],"import PropTypes from \"prop-types\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Answer from \"./Answer\";\r\nimport ErrorMessage from \"../../../Shared/Forms/ErrorMessage\";\r\n\r\nexport default function Question({\r\n  question,\r\n  answers,\r\n  userAnswerIndex,\r\n  index,\r\n  rightAnswerIndex,\r\n  register,\r\n  isAnswered,\r\n  errorMessage,\r\n}) {\r\n  const [result, setResult] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (isAnswered) {\r\n      const answerResult =\r\n        userAnswerIndex == rightAnswerIndex ? \" right\" : \" wrong\";\r\n      setResult(answerResult);\r\n    }\r\n  }, [isAnswered]);\r\n\r\n  const answersJSX = answers.map((answer, i) => {\r\n    return (\r\n      <Answer\r\n        register={register}\r\n        key={i}\r\n        answer={answer}\r\n        index={i}\r\n        questionIndex={index}\r\n        rightAnswerIndex={rightAnswerIndex}\r\n        userAnswerIndex={userAnswerIndex}\r\n        name={`answers[${index}].value`}\r\n        isAnswered={isAnswered}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <li className={\"question\" + result}>\r\n      <h2>{question}</h2>\r\n      <ul className=\"list-unstyled p-0\">{answersJSX}</ul>\r\n      {errorMessage ? <ErrorMessage message={errorMessage} /> : null}\r\n\r\n      <hr />\r\n    </li>\r\n  );\r\n}\r\n","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AnswerTest\\Question\\Answer.js",["249","250","251"],"import PropTypes from \"prop-types\";\r\nimport Radio from \"../../../Shared/Forms/Inputs/Radio\";\r\n\r\nexport default function Answer({\r\n  answer,\r\n  index,\r\n  questionIndex,\r\n  rightAnswerIndex,\r\n  register,\r\n  name,\r\n  isAnswered,\r\n  userAnswerIndex,\r\n}) {\r\n  const id = \"a\" + index;\r\n  const right = isAnswered && rightAnswerIndex == index ? \" right-answer\" : \"\";\r\n  const selected = isAnswered && userAnswerIndex == index ? \" selected\" : \"\";\r\n  return (\r\n    <li className={\"answer custom-radio\" + right + selected}>\r\n      <Radio\r\n        classes=\"d-none\"\r\n        id={id}\r\n        register={register}\r\n        label={`Question ${questionIndex} answer ${index}`}\r\n        value={index}\r\n        name={name}\r\n        isDisabled={isAnswered}\r\n      />\r\n      <p>{answer}</p>\r\n    </li>\r\n  );\r\n}\r\n","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AddTest\\QuestionInput\\Question.js",["252"],"import PropTypes from \"prop-types\";\r\nimport Input from \"../../../Shared/Forms/Inputs/Input\";\r\nimport AnswerInput from \"./AnswerInput\";\r\n\r\nexport default function Question({\r\n  index,\r\n  id,\r\n  name,\r\n  answers,\r\n  rightAnswer,\r\n  register,\r\n  errors,\r\n  removeQuestion,\r\n  question,\r\n}) {\r\n  const answersJSX = answers.map((answer, index) => {\r\n    const answerId = id + \"a\" + (index + 1);\r\n    return (\r\n      <AnswerInput\r\n        key={answerId}\r\n        rightAnswer={rightAnswer}\r\n        questionIndex={index}\r\n        questionId={id}\r\n        index={index}\r\n        register={register}\r\n        id={answerId}\r\n        errorMessage={\r\n          (errors?.answers ? errors.answers[index] : null)\r\n            ? errors.answers[index].message\r\n            : null\r\n        }\r\n        {...answer}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"question\">\r\n      {index != 0 ? (\r\n        <button className=\"remove-question-btn\" onClick={removeQuestion}>\r\n          <i className=\"fa fa-trash\" />\r\n        </button>\r\n      ) : null}\r\n      <Input\r\n        id={id}\r\n        name={name}\r\n        label={\"Question \" + (index + 1)}\r\n        register={register}\r\n        isRequired={true}\r\n        placeholder=\"Enter your question\"\r\n        type=\"text\"\r\n        defaultValue={question}\r\n        errorMessage={errors?.question ? errors.question.message : null}\r\n      />\r\n      <fieldset>\r\n        <legend>Answers</legend>\r\n        {answersJSX}\r\n      </fieldset>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuestion.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  id: PropTypes.string,\r\n  answers: PropTypes.array.isRequired,\r\n  rightAnswer: PropTypes.object.isRequired,\r\n  register: PropTypes.any.isRequired,\r\n  removeQuestion: PropTypes.func.isRequired,\r\n  errors: PropTypes.any,\r\n};\r\n","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AddTest\\QuestionInput\\AnswerInput.js",["253"],"import PropTypes from \"prop-types\";\r\nimport ErrorMessage from \"../../../Shared/Forms/ErrorMessage\";\r\nimport Radio from \"../../../Shared/Forms/Inputs/Radio\";\r\n\r\nexport default function AnswerInput({\r\n  questionIndex,\r\n  questionId,\r\n  id,\r\n  index,\r\n  name,\r\n  rightAnswer,\r\n  register,\r\n  errorMessage,\r\n  defaultValue,\r\n}) {\r\n  const isRight = rightAnswer.index == index;\r\n  return (\r\n    <div className=\"form-group answer\">\r\n      <label className=\"d-none\" htmlFor={id}>{`Question ${\r\n        questionIndex + 1\r\n      } answer ${index + 1}`}</label>\r\n\r\n      <div className=\"inputs\">\r\n        <input\r\n          id={id}\r\n          name={name}\r\n          type=\"text\"\r\n          placeholder={`Answer ${index + 1}...`}\r\n          className={\"input form-control \" + (errorMessage ? \"invalid\" : \"\")}\r\n          ref={register()}\r\n          defaultValue={defaultValue}\r\n        />\r\n        <div className={\"custom-radio\" + (isRight ? \" right\" : \"\")}>\r\n          <Radio\r\n            classes=\"d-none\"\r\n            label={`Question ${questionIndex} right answer`}\r\n            id={\"rightAnswer\" + index + questionId}\r\n            name={rightAnswer.name}\r\n            value={index}\r\n            register={register}\r\n            defaultChecked={isRight}\r\n          />\r\n        </div>\r\n      </div>\r\n      {errorMessage ? <ErrorMessage message={errorMessage} /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nAnswerInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  defaultValue: PropTypes.any,\r\n  rightAnswer: PropTypes.shape({\r\n    index: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  questionIndex: PropTypes.number.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  register: PropTypes.any.isRequired,\r\n  errorMessage: PropTypes.string,\r\n};\r\n","F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\Inputs\\Radio.js",[],"F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AnswerTest\\Result.js",[],"F:\\Web\\work\\test-project\\src\\components\\Errors\\ErrorBoundary.js",["254"],"F:\\Web\\work\\test-project\\src\\components\\Errors\\Error404.js",["255"],"F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\AdminTests\\NoData.js",["256"],"F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\AllTests\\NoData.js",["257"],{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":26,"column":6,"nodeType":"264","endLine":26,"endColumn":16,"suggestions":"265"},{"ruleId":"266","severity":1,"message":"267","line":30,"column":18,"nodeType":"268","messageId":"269","endLine":30,"endColumn":20},{"ruleId":"262","severity":1,"message":"263","line":31,"column":6,"nodeType":"264","endLine":31,"endColumn":16,"suggestions":"270"},{"ruleId":"266","severity":1,"message":"267","line":33,"column":19,"nodeType":"268","messageId":"269","endLine":33,"endColumn":21},{"ruleId":"266","severity":1,"message":"267","line":81,"column":24,"nodeType":"268","messageId":"269","endLine":81,"endColumn":26},{"ruleId":"266","severity":1,"message":"267","line":81,"column":48,"nodeType":"268","messageId":"269","endLine":81,"endColumn":50},{"ruleId":"266","severity":1,"message":"267","line":132,"column":24,"nodeType":"268","messageId":"269","endLine":132,"endColumn":26},{"ruleId":"262","severity":1,"message":"271","line":28,"column":6,"nodeType":"264","endLine":28,"endColumn":8,"suggestions":"272"},{"ruleId":"273","severity":1,"message":"274","line":30,"column":18,"nodeType":"275","messageId":"276","endLine":30,"endColumn":28},{"ruleId":"262","severity":1,"message":"263","line":49,"column":6,"nodeType":"264","endLine":49,"endColumn":16,"suggestions":"277"},{"ruleId":"266","severity":1,"message":"267","line":12,"column":18,"nodeType":"268","messageId":"269","endLine":12,"endColumn":20},{"ruleId":"262","severity":1,"message":"263","line":15,"column":6,"nodeType":"264","endLine":15,"endColumn":16,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":44,"column":15,"nodeType":"281","endLine":51,"endColumn":16},{"ruleId":"279","severity":1,"message":"280","line":63,"column":17,"nodeType":"281","endLine":63,"endColumn":65},{"ruleId":"262","severity":1,"message":"282","line":53,"column":6,"nodeType":"264","endLine":53,"endColumn":8,"suggestions":"283"},{"ruleId":"262","severity":1,"message":"284","line":71,"column":6,"nodeType":"264","endLine":71,"endColumn":23,"suggestions":"285"},{"ruleId":"262","severity":1,"message":"286","line":84,"column":13,"nodeType":"287","endLine":90,"endColumn":4},{"ruleId":"262","severity":1,"message":"288","line":90,"column":6,"nodeType":"264","endLine":90,"endColumn":17,"suggestions":"289"},{"ruleId":"290","severity":1,"message":"291","line":223,"column":15,"nodeType":"292","endLine":223,"endColumn":71},{"ruleId":"293","severity":1,"message":"294","line":7,"column":9,"nodeType":"281","endLine":7,"endColumn":59},{"ruleId":"293","severity":1,"message":"294","line":10,"column":7,"nodeType":"281","endLine":10,"endColumn":56},{"ruleId":"258","replacedBy":"295"},{"ruleId":"260","replacedBy":"296"},{"ruleId":"297","severity":1,"message":"298","line":2,"column":8,"nodeType":"275","messageId":"299","endLine":2,"endColumn":16},{"ruleId":"266","severity":1,"message":"267","line":18,"column":18,"nodeType":"268","messageId":"269","endLine":18,"endColumn":20},{"ruleId":"262","severity":1,"message":"300","line":19,"column":6,"nodeType":"264","endLine":19,"endColumn":30,"suggestions":"301"},{"ruleId":"297","severity":1,"message":"302","line":1,"column":21,"nodeType":"275","messageId":"299","endLine":1,"endColumn":27},{"ruleId":"297","severity":1,"message":"303","line":32,"column":11,"nodeType":"275","messageId":"299","endLine":32,"endColumn":17},{"ruleId":"262","severity":1,"message":"304","line":61,"column":6,"nodeType":"264","endLine":61,"endColumn":8,"suggestions":"305"},{"ruleId":"262","severity":1,"message":"284","line":69,"column":6,"nodeType":"264","endLine":69,"endColumn":17,"suggestions":"306"},{"ruleId":"266","severity":1,"message":"267","line":87,"column":29,"nodeType":"268","messageId":"269","endLine":87,"endColumn":31},{"ruleId":"297","severity":1,"message":"307","line":1,"column":8,"nodeType":"275","messageId":"299","endLine":1,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":21,"column":25,"nodeType":"268","messageId":"269","endLine":21,"endColumn":27},{"ruleId":"262","severity":1,"message":"308","line":24,"column":6,"nodeType":"264","endLine":24,"endColumn":18,"suggestions":"309"},{"ruleId":"297","severity":1,"message":"307","line":1,"column":8,"nodeType":"275","messageId":"299","endLine":1,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":15,"column":48,"nodeType":"268","messageId":"269","endLine":15,"endColumn":50},{"ruleId":"266","severity":1,"message":"267","line":16,"column":50,"nodeType":"268","messageId":"269","endLine":16,"endColumn":52},{"ruleId":"266","severity":1,"message":"310","line":39,"column":14,"nodeType":"268","messageId":"269","endLine":39,"endColumn":16},{"ruleId":"266","severity":1,"message":"267","line":16,"column":37,"nodeType":"268","messageId":"269","endLine":16,"endColumn":39},{"ruleId":"293","severity":1,"message":"294","line":21,"column":15,"nodeType":"281","endLine":21,"endColumn":60},{"ruleId":"293","severity":1,"message":"294","line":11,"column":13,"nodeType":"281","endLine":11,"endColumn":56},{"ruleId":"293","severity":1,"message":"294","line":6,"column":7,"nodeType":"281","endLine":6,"endColumn":45},{"ruleId":"293","severity":1,"message":"294","line":4,"column":7,"nodeType":"281","endLine":4,"endColumn":43},"no-native-reassign",["311"],"no-negated-in-lhs",["312"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["313"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["314"],"React Hook useEffect has missing dependencies: 'getAPIUser' and 'setAppData'. Either include them or remove the dependency array. If 'setAppData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["315"],"no-redeclare","'getAPIUser' is already defined.","Identifier","redeclared",["316"],["317"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'match.params.id' and 'test'. Either include them or remove the dependency array. You can also do a functional update 'setTest(t => ...)' if you only need 'test' in the 'setTest' call.",["318"],"React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.",["319"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'getAPITest', 'match.params.id', and 'reset'. Either include them or remove the dependency array.",["320"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["311"],["312"],"no-unused-vars","'database' is defined but never used.","unusedVar","React Hook useEffect has missing dependencies: 'app.uid' and 'getAPITests'. Either include them or remove the dependency array.",["321"],"'object' is defined but never used.","'fields' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'match.params.testId', 'match.params.testerId', and 'test'. Either include them or remove the dependency array. You can also do a functional update 'setTest(t => ...)' if you only need 'test' in the 'setTest' call.",["322"],["323"],"'PropTypes' is defined but never used.","React Hook useEffect has missing dependencies: 'rightAnswerIndex' and 'userAnswerIndex'. Either include them or remove the dependency array.",["324"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"325","fix":"326"},{"desc":"325","fix":"327"},{"desc":"328","fix":"329"},{"desc":"325","fix":"330"},{"desc":"325","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},"Update the dependencies array to be: [history, isLogged]",{"range":"346","text":"347"},{"range":"348","text":"347"},"Update the dependencies array to be: [getAPIUser, setAppData]",{"range":"349","text":"350"},{"range":"351","text":"347"},{"range":"352","text":"347"},"Update the dependencies array to be: [match.params.id, test]",{"range":"353","text":"354"},"Update the dependencies array to be: [match.params.id, reset]",{"range":"355","text":"356"},"Update the dependencies array to be: [getAPITest, isEditing, match.params.id, reset]",{"range":"357","text":"358"},"Update the dependencies array to be: [app.uid, getAPITests, isLogged, user.isAdmin]",{"range":"359","text":"360"},"Update the dependencies array to be: [match.params.testId, match.params.testerId, test]",{"range":"361","text":"362"},"Update the dependencies array to be: [reset, test.data]",{"range":"363","text":"364"},"Update the dependencies array to be: [isAnswered, rightAnswerIndex, userAnswerIndex]",{"range":"365","text":"366"},[957,967],"[history, isLogged]",[1005,1015],[957,959],"[getAPIUser, setAppData]",[1496,1506],[485,495],[1580,1582],"[match.params.id, test]",[1979,1996],"[match.params.id, reset]",[2451,2462],"[getAPITest, isEditing, match.params.id, reset]",[624,648],"[app.uid, getAPITests, isLogged, user.isAdmin]",[1597,1599],"[match.params.testId, match.params.testerId, test]",[1739,1750],"[reset, test.data]",[575,587],"[isAnswered, rightAnswerIndex, userAnswerIndex]"]