[{"F:\\Web\\work\\test-project\\src\\index.js":"1","F:\\Web\\work\\test-project\\src\\App.js":"2","F:\\Web\\work\\test-project\\src\\reportWebVitals.js":"3","F:\\Web\\work\\test-project\\src\\components\\Auth\\SignIn.js":"4","F:\\Web\\work\\test-project\\src\\components\\Home\\Home.js":"5","F:\\Web\\work\\test-project\\src\\forms\\inputsProps.js":"6","F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\Inputs\\Inputs.js":"7","F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\Inputs\\Input.js":"8","F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\ErrorMessage.js":"9","F:\\Web\\work\\test-project\\src\\components\\Shared\\Button.js":"10","F:\\Web\\work\\test-project\\src\\forms\\validation\\schemas\\auth.js":"11","F:\\Web\\work\\test-project\\src\\forms\\validation\\schemas\\shared.js":"12","F:\\Web\\work\\test-project\\src\\components\\Auth\\SignUp.js":"13","F:\\Web\\work\\test-project\\src\\redux\\ConfigureStore.js":"14","F:\\Web\\work\\test-project\\src\\redux\\auth\\Reducer.js":"15","F:\\Web\\work\\test-project\\src\\redux\\auth\\ActionCreators.js":"16","F:\\Web\\work\\test-project\\src\\redux\\auth\\ActionTypes.js":"17","F:\\Web\\work\\test-project\\src\\redux\\auth\\Utility.js":"18","F:\\Web\\work\\test-project\\src\\components\\Shared\\Spinners\\Spinner.js":"19","F:\\Web\\work\\test-project\\src\\components\\AppWrapper.js":"20","F:\\Web\\work\\test-project\\src\\components\\Shared\\Spinners\\PageSpinner.js":"21","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Dashboard.js":"22","F:\\Web\\work\\test-project\\src\\components\\Layout\\Page.js":"23","F:\\Web\\work\\test-project\\src\\components\\Layout\\Navbar.js":"24","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AddTest\\AddTest.js":"25","F:\\Web\\work\\test-project\\src\\components\\Home\\Slider.js":"26","F:\\Web\\work\\test-project\\src\\components\\Home\\Navbar.js":"27","F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\Inputs\\QuestionInput\\AnswerInput.js":"28","F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\Inputs\\QuestionInput\\Question.js":"29","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AddTest\\QuestionsCounter.js":"30","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AddTest\\AddQuestionBtn.js":"31","F:\\Web\\work\\test-project\\src\\configs\\axios.js":"32","F:\\Web\\work\\test-project\\src\\configs\\firebase.js":"33","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\Tests.js":"34","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\TestCard.js":"35","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\NoData.js":"36"},{"size":667,"mtime":1609790600690,"results":"37","hashOfConfig":"38"},{"size":934,"mtime":1609937210574,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1609752222980,"results":"40","hashOfConfig":"38"},{"size":2001,"mtime":1609786014727,"results":"41","hashOfConfig":"38"},{"size":282,"mtime":1609791650620,"results":"42","hashOfConfig":"38"},{"size":923,"mtime":1609771106712,"results":"43","hashOfConfig":"38"},{"size":611,"mtime":1609770536290,"results":"44","hashOfConfig":"38"},{"size":1026,"mtime":1609863249172,"results":"45","hashOfConfig":"38"},{"size":229,"mtime":1609770561783,"results":"46","hashOfConfig":"38"},{"size":805,"mtime":1609776567234,"results":"47","hashOfConfig":"38"},{"size":386,"mtime":1609771583294,"results":"48","hashOfConfig":"38"},{"size":180,"mtime":1609774703253,"results":"49","hashOfConfig":"38"},{"size":2005,"mtime":1609786040178,"results":"50","hashOfConfig":"38"},{"size":414,"mtime":1609773279890,"results":"51","hashOfConfig":"38"},{"size":938,"mtime":1609783391364,"results":"52","hashOfConfig":"38"},{"size":2293,"mtime":1609783203493,"results":"53","hashOfConfig":"38"},{"size":254,"mtime":1609783186845,"results":"54","hashOfConfig":"38"},{"size":1043,"mtime":1609785127277,"results":"55","hashOfConfig":"38"},{"size":134,"mtime":1609786753311,"results":"56","hashOfConfig":"38"},{"size":1378,"mtime":1609937613406,"results":"57","hashOfConfig":"38"},{"size":151,"mtime":1609786710459,"results":"58","hashOfConfig":"38"},{"size":899,"mtime":1609937892459,"results":"59","hashOfConfig":"38"},{"size":287,"mtime":1609786237382,"results":"60","hashOfConfig":"38"},{"size":780,"mtime":1609938387892,"results":"61","hashOfConfig":"38"},{"size":4322,"mtime":1609931098511,"results":"62","hashOfConfig":"38"},{"size":2242,"mtime":1609937501945,"results":"63","hashOfConfig":"38"},{"size":424,"mtime":1609937554428,"results":"64","hashOfConfig":"38"},{"size":1635,"mtime":1609878099251,"results":"65","hashOfConfig":"38"},{"size":1465,"mtime":1609878473193,"results":"66","hashOfConfig":"38"},{"size":486,"mtime":1609852510547,"results":"67","hashOfConfig":"38"},{"size":375,"mtime":1609853701926,"results":"68","hashOfConfig":"38"},{"size":166,"mtime":1609872730821,"results":"69","hashOfConfig":"38"},{"size":618,"mtime":1609880611506,"results":"70","hashOfConfig":"38"},{"size":1945,"mtime":1609942070497,"results":"71","hashOfConfig":"38"},{"size":762,"mtime":1609940487702,"results":"72","hashOfConfig":"38"},{"size":331,"mtime":1609941910136,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1bcvm5r",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Web\\work\\test-project\\src\\index.js",[],["158","159"],"F:\\Web\\work\\test-project\\src\\App.js",[],"F:\\Web\\work\\test-project\\src\\reportWebVitals.js",[],"F:\\Web\\work\\test-project\\src\\components\\Auth\\SignIn.js",["160","161","162"],"import { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { signInInputs } from \"../../forms/inputsProps\";\r\nimport { signInSchema } from \"../../forms/validation/schemas/auth\";\r\nimport { doAPISignIn } from \"../../redux/auth/ActionCreators\";\r\nimport { connect } from \"react-redux\";\r\nimport Inputs from \"../Shared/Forms/Inputs/Inputs\";\r\nimport Button from \"../Shared/Button\";\r\n\r\nfunction SignIn({ doSignIn, app, signIn, history, isLogged }) {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(signInSchema),\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    doSignIn({ password: data.password, email: data.email });\r\n  };\r\n\r\n  //Redirect user if signed in\r\n  useEffect(() => {\r\n    if (isLogged == true) history.push(\"/dashboard\");\r\n  }, [isLogged]);\r\n\r\n  return isLogged == false ? (\r\n    <main className=\"auth sign-in\">\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h1>Sign In</h1>\r\n          <p>\r\n            Don't have an account yet? <Link to=\"/sign-up\">Sign Up</Link>\r\n          </p>\r\n          <Inputs\r\n            inputProps={signInInputs}\r\n            errors={errors}\r\n            register={register}\r\n          />\r\n          <Button\r\n            title=\"Sign In\"\r\n            classes=\"btn-primary d-block mr-md-0 mx-auto\"\r\n            isLoading={signIn.isLoading}\r\n          />\r\n        </form>\r\n      </div>\r\n    </main>\r\n  ) : null;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.auth.app,\r\n    isLogged: state.auth.user.isLogged,\r\n    signIn: state.auth.signIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    doSignIn: ({ email, password }) => {\r\n      dispatch(doAPISignIn({ email, password }));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","F:\\Web\\work\\test-project\\src\\components\\Home\\Home.js",[],"F:\\Web\\work\\test-project\\src\\forms\\inputsProps.js",[],"F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\Inputs\\Inputs.js",[],"F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\Inputs\\Input.js",[],"F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\ErrorMessage.js",[],"F:\\Web\\work\\test-project\\src\\components\\Shared\\Button.js",["163","164"],"import PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"./Spinners/Spinner\";\r\n\r\nfunction Button({ title, classes, link, clicked, isLoading }) {\r\n  return (\r\n    <button\r\n      className={\"btn \" + classes}\r\n      onClick={clicked ? clicked : null}\r\n      disabled={isLoading == true}\r\n    >\r\n      {link ? (\r\n        <Link href={link}>\r\n          <a href={link}>{title}</a>\r\n        </Link>\r\n      ) : (\r\n        <span>\r\n          {title}\r\n          {isLoading == true ? <Spinner /> : null}\r\n        </span>\r\n      )}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  classes: PropTypes.string.isRequired,\r\n  link: PropTypes.string,\r\n  clicked: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n","F:\\Web\\work\\test-project\\src\\forms\\validation\\schemas\\auth.js",[],"F:\\Web\\work\\test-project\\src\\forms\\validation\\schemas\\shared.js",[],"F:\\Web\\work\\test-project\\src\\components\\Auth\\SignUp.js",["165","166","167"],"import { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { signUpInputs } from \"../../forms/inputsProps\";\r\nimport { signUpSchema } from \"../../forms/validation/schemas/auth\";\r\nimport { doAPISignUp } from \"../../redux/auth/ActionCreators\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Inputs from \"../Shared/Forms/Inputs/Inputs\";\r\nimport Button from \"../Shared/Button\";\r\n\r\nfunction SignUp({ doSignUp, app, signUp, history, isLogged }) {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(signUpSchema),\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    doSignUp({ password: data.password, email: data.email });\r\n  };\r\n\r\n  //Redirect user if signed in\r\n  useEffect(() => {\r\n    if (isLogged == true) history.push(\"/dashboard\");\r\n  }, [isLogged]);\r\n\r\n  return isLogged == false ? (\r\n    <main className=\"auth sign-up\">\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h1>Sign Up</h1>\r\n          <p>\r\n            Already have an account yet? <Link to=\"/sign-in\">Sign In</Link>\r\n          </p>\r\n          <Inputs\r\n            inputProps={signUpInputs}\r\n            errors={errors}\r\n            register={register}\r\n          />\r\n          <Button\r\n            title=\"Sign Up\"\r\n            classes=\"btn-primary d-block mr-md-0 mx-auto\"\r\n            isLoading={signUp.isLoading}\r\n          />\r\n        </form>\r\n      </div>\r\n    </main>\r\n  ) : null;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.auth.app,\r\n    isLogged: state.auth.user.isLogged,\r\n    signUp: state.auth.signUp,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    doSignUp: ({ email, password }) => {\r\n      dispatch(doAPISignUp({ email, password }));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","F:\\Web\\work\\test-project\\src\\redux\\ConfigureStore.js",[],"F:\\Web\\work\\test-project\\src\\redux\\auth\\Reducer.js",[],"F:\\Web\\work\\test-project\\src\\redux\\auth\\ActionCreators.js",["168","169"],"import * as ActionTypes from \"./ActionTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst onAuthSuccess = ({ apiToken, uid }) => {\r\n  return {\r\n    type: ActionTypes.ON_AUTH_SUCCESS,\r\n    payload: { apiToken, uid },\r\n  };\r\n};\r\n\r\nconst updateSignUpLoadingStatus = (stauts) => {\r\n  return {\r\n    type: ActionTypes.UPDATE_SIGN_UP_LOADING_STATUS,\r\n    payload: stauts,\r\n  };\r\n};\r\n\r\nconst updateSignInLoadingStatus = (status) => {\r\n  return {\r\n    type: ActionTypes.UPDATE_SIGN_IN_LOADING_STATUS,\r\n    payload: status,\r\n  };\r\n};\r\n\r\nexport const setAppData = ({ uid, apiToken }) => {\r\n  return {\r\n    type: ActionTypes.SET_APP_DATA,\r\n    payload: {\r\n      uid,\r\n      apiToken,\r\n    },\r\n  };\r\n};\r\n\r\n/* API Actions */\r\nconst projectWebAPIKey = \"AIzaSyDmoM405gtzCzG5nTHLJ5ffWg2tBNRp6Ug\";\r\n\r\nexport const doAPISignUp = ({ email, password }) => (dispatch) => {\r\n  const apiEndPoint =\r\n    \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\" +\r\n    projectWebAPIKey;\r\n\r\n  dispatch(updateSignUpLoadingStatus(true));\r\n  axios\r\n    .post(apiEndPoint, { email, password, returnSecureToken: true })\r\n    .then((res) => {\r\n      dispatch(updateSignUpLoadingStatus(false));\r\n      if (res.status == 200) {\r\n        const data = res.data;\r\n        dispatch(\r\n          onAuthSuccess({\r\n            apiToken: data.idToken,\r\n            uid: data.localId,\r\n          })\r\n        );\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch(updateSignUpLoadingStatus(false));\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const doAPISignIn = ({ email, password }) => (dispatch) => {\r\n  const apiEndPoint =\r\n    \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\" +\r\n    projectWebAPIKey;\r\n\r\n  dispatch(updateSignInLoadingStatus(true));\r\n  axios\r\n    .post(apiEndPoint, { email, password, returnSecureToken: true })\r\n    .then((res) => {\r\n      dispatch(updateSignInLoadingStatus(false));\r\n      if (res.status == 200) {\r\n        const data = res.data;\r\n        dispatch(\r\n          onAuthSuccess({\r\n            apiToken: data.idToken,\r\n            uid: data.localId,\r\n          })\r\n        );\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch(updateSignInLoadingStatus(false));\r\n      console.log(error);\r\n    });\r\n};\r\n\r\n// export const getUserData = function(){\r\n\r\n// }\r\n","F:\\Web\\work\\test-project\\src\\redux\\auth\\ActionTypes.js",[],"F:\\Web\\work\\test-project\\src\\redux\\auth\\Utility.js",[],"F:\\Web\\work\\test-project\\src\\components\\Shared\\Spinners\\Spinner.js",[],"F:\\Web\\work\\test-project\\src\\components\\AppWrapper.js",["170","171","172"],"F:\\Web\\work\\test-project\\src\\components\\Shared\\Spinners\\PageSpinner.js",[],"F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Dashboard.js",["173","174"],"F:\\Web\\work\\test-project\\src\\components\\Layout\\Page.js",[],"F:\\Web\\work\\test-project\\src\\components\\Layout\\Navbar.js",[],"F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AddTest\\AddTest.js",["175"],"import { useState, useEffect } from \"react\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport { connect } from \"react-redux\";\r\nimport firebase from \"../../../configs/firebase\";\r\nimport Page from \"../../Layout/Page\";\r\nimport QuestionCounter from \"./QuestionsCounter\";\r\nimport AddQuestionBtn from \"./AddQuestionBtn\";\r\nimport Question from \"../../Shared/Forms/Inputs/QuestionInput/Question\";\r\nimport Button from \"../../Shared/Button\";\r\nimport Input from \"../../Shared/Forms/Inputs/Input\";\r\n\r\nfunction AddTest({ history, app }) {\r\n  const [test, setTest] = useState({\r\n    id: null,\r\n    isLoading: false,\r\n    success: null,\r\n    failed: null,\r\n  });\r\n\r\n  const { register, handleSubmit, errors, control } = useForm({\r\n    // resolver: yupResolver(signInSchema),\r\n    defaultValues: {\r\n      shouldUnregister: false,\r\n      questions: [\r\n        {\r\n          qid: \"q1\",\r\n          question: \"\",\r\n          rightAnswerIndex: \"\",\r\n          answers: [],\r\n        },\r\n      ],\r\n    },\r\n    mode: \"onSubmit\",\r\n    reValidateMode: \"onChange\",\r\n  });\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"questions\",\r\n  });\r\n\r\n  function onTestScucess(testId) {\r\n    if (testId) history.push(\"/dashboard\");\r\n    setTest({\r\n      ...test,\r\n      id: testId ?? test.id,\r\n      isLoading: false,\r\n    });\r\n  }\r\n\r\n  function onTestFail(error) {\r\n    console.log(\"Error saving your test:\", error);\r\n  }\r\n\r\n  function doAPISubmitTest(testData) {\r\n    setTest({\r\n      ...test,\r\n      isLoading: true,\r\n    });\r\n\r\n    //If the test already exists update it\r\n    //If it doesn't the create a new one and retrieve its id i.e(response.key)\r\n    if (!test.id) {\r\n      firebase\r\n        .database()\r\n        .ref(`tests/${app.uid}/`)\r\n        .push(testData)\r\n        .then((response) => {\r\n          onTestScucess(response.key);\r\n        })\r\n        .catch((error) => {\r\n          onTestFail(error);\r\n        });\r\n    } else {\r\n      firebase\r\n        .database()\r\n        .ref(`tests/${app.uid}/${test.id}`)\r\n        .update(testData)\r\n        .then(() => {\r\n          onTestScucess();\r\n        })\r\n        .catch((error) => {\r\n          onTestFail(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  const questionJSX = fields.map((item, index) => {\r\n    const answers = [];\r\n    for (let i = 1; i <= 4; i++) {\r\n      answers.push({\r\n        name: `questions[${index}].answers[${i}]`,\r\n        id: item.id + (i + 1),\r\n      });\r\n    }\r\n\r\n    return (\r\n      <Question\r\n        key={item.qid}\r\n        index={index}\r\n        id={item.qid}\r\n        name={`questions[${index}].question`}\r\n        answers={answers}\r\n        removeQuestion={removeQuestion.bind(this, index)}\r\n        rightAnswer={{\r\n          name: `questions[${index}].rightAnswerIndex`,\r\n          index: item.rightAnswerIndex,\r\n        }}\r\n        register={register}\r\n        errors={errors}\r\n      />\r\n    );\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    doAPISubmitTest(data);\r\n  };\r\n\r\n  function addNewQuestion() {\r\n    const quesId = \"q\" + (fields.length + 1);\r\n    const question = {\r\n      qid: quesId,\r\n      question: \"\",\r\n      answers: [],\r\n      rightAnswerIndex: \"\",\r\n    };\r\n    append(question);\r\n  }\r\n\r\n  function removeQuestion(index) {\r\n    remove(index);\r\n  }\r\n\r\n  return (\r\n    <Page classes=\"add-test\">\r\n      <h1>Add Test</h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-8\">\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Input\r\n              register={register}\r\n              label=\"Test Name\"\r\n              isRequired={true}\r\n              errorMessage={errors.name ? errors.name.message : null}\r\n              placeholder=\"Enter your test name\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n            />\r\n            <hr className=\"my-5\" />\r\n            {questionJSX}\r\n            <hr />\r\n            <Button\r\n              title=\"Add Test\"\r\n              classes=\"btn-primary d-block mx-auto\"\r\n              isLoading={test.isLoading}\r\n            />\r\n          </form>\r\n        </div>\r\n        <QuestionCounter counter={fields.length} />\r\n      </div>\r\n      <AddQuestionBtn clicked={addNewQuestion} />\r\n    </Page>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.auth.app,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AddTest);\r\n","F:\\Web\\work\\test-project\\src\\components\\Home\\Slider.js",[],"F:\\Web\\work\\test-project\\src\\components\\Home\\Navbar.js",[],"F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\Inputs\\QuestionInput\\AnswerInput.js",["176"],"import PropTypes from \"prop-types\";\r\nimport ErrorMessage from \"../../ErrorMessage\";\r\n\r\nexport default function AnswerInput({\r\n  questionIndex,\r\n  questionId,\r\n  id,\r\n  index,\r\n  name,\r\n  value,\r\n  rightAnswer,\r\n  register,\r\n  errorMessage,\r\n}) {\r\n  return (\r\n    <div className=\"form-group answer\">\r\n      <label className=\"d-none\" htmlFor={id}>{`Question ${\r\n        questionIndex + 1\r\n      } answer ${index + 1}`}</label>\r\n\r\n      <div className=\"inputs\">\r\n        <input\r\n          id={id}\r\n          name={name}\r\n          type=\"text\"\r\n          placeholder={`Answer ${index + 1}...`}\r\n          className={\"input form-control \" + (errorMessage ? \"invalid\" : \"\")}\r\n          ref={register()}\r\n        />\r\n        <div className=\"radio-wrapper\">\r\n          <input\r\n            id={\"rightAnswer\" + index + questionId}\r\n            name={rightAnswer.name}\r\n            type=\"radio\"\r\n            value={index}\r\n            ref={register()}\r\n            defaultChecked={rightAnswer.index == index}\r\n          />\r\n          <div className=\"custom-radio\">\r\n            <i className=\"fa fa-check-circle\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {errorMessage ? <ErrorMessage message={errorMessage} /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nAnswerInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  value: PropTypes.string,\r\n  rightAnswer: PropTypes.shape({\r\n    index: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  questionIndex: PropTypes.number.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  register: PropTypes.any.isRequired,\r\n  errorMessage: PropTypes.string,\r\n};\r\n","F:\\Web\\work\\test-project\\src\\components\\Shared\\Forms\\Inputs\\QuestionInput\\Question.js",["177"],"import PropTypes from \"prop-types\";\r\nimport Input from \"../Input\";\r\nimport AnswerInput from \"./AnswerInput\";\r\n\r\nexport default function Question({\r\n  index,\r\n  id,\r\n  name,\r\n  answers,\r\n  rightAnswer,\r\n  register,\r\n  errors,\r\n  removeQuestion,\r\n}) {\r\n  const answersJSX = answers.map((answer, index) => {\r\n    return (\r\n      <AnswerInput\r\n        key={answer.id}\r\n        rightAnswer={rightAnswer}\r\n        questionIndex={index}\r\n        questionId={id}\r\n        index={index}\r\n        register={register}\r\n        {...answer}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"question\">\r\n      {index != 0 ? (\r\n        <button className=\"remove-question-btn\" onClick={removeQuestion}>\r\n          <i className=\"fa fa-trash\" />\r\n        </button>\r\n      ) : null}\r\n      <Input\r\n        id={id}\r\n        name={name}\r\n        label={\"Question \" + (index + 1)}\r\n        register={register}\r\n        isRequired={true}\r\n        placeholder=\"Enter your question\"\r\n        type=\"text\"\r\n        // errorMessage={errors[\"q\" + index]}\r\n      />\r\n      <fieldset>\r\n        <legend>Answers</legend>\r\n        {answersJSX}\r\n      </fieldset>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuestion.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  answers: PropTypes.array.isRequired,\r\n  rightAnswer: PropTypes.object.isRequired,\r\n  register: PropTypes.any.isRequired,\r\n  removeQuestion: PropTypes.func.isRequired,\r\n  errors: PropTypes.object,\r\n};\r\n","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AddTest\\QuestionsCounter.js",["178"],"import PropTypes from \"prop-types\";\r\n\r\nexport default function QuestionsCounter({ counter }) {\r\n  return (\r\n    <div className=\"col-md-3 offset-md-1 order-md-last order-first mb-5 mb-md-0\">\r\n      <div className=\"q-counter text-center\">\r\n        <img src=\"/assets/images/add-test/question.png\" />\r\n        <p className=\"mb-0\">{counter < 10 ? \"0\" + counter : counter}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuestionsCounter.propTypes = {\r\n  counter: PropTypes.number.isRequired,\r\n};\r\n","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\AddTest\\AddQuestionBtn.js",["179"],"import PropTypes from \"prop-types\";\r\n\r\nexport default function AddQuestionBtn({ clicked }) {\r\n  return (\r\n    <button\r\n      title=\"Add new question\"\r\n      className=\"add-question-btn\"\r\n      onClick={clicked}\r\n    >\r\n      <img src=\"/assets/images/add-test/add-btn.svg\" />\r\n    </button>\r\n  );\r\n}\r\n\r\nAddQuestionBtn.propTypes = {\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\n","F:\\Web\\work\\test-project\\src\\configs\\axios.js",[],["180","181"],"F:\\Web\\work\\test-project\\src\\configs\\firebase.js",["182"],"import firebase from \"firebase/app\";\r\nimport database from \"firebase/database\";\r\n\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyDmoM405gtzCzG5nTHLJ5ffWg2tBNRp6Ug\",\r\n  authDomain: \"testswebapp-af51f.firebaseapp.com\",\r\n  databaseURL: \"https://testswebapp-af51f-default-rtdb.firebaseio.com\",\r\n  projectId: \"testswebapp-af51f\",\r\n  storageBucket: \"testswebapp-af51f.appspot.com\",\r\n  messagingSenderId: \"862702560579\",\r\n  appId: \"1:862702560579:web:c1826503fbd6ae7fecbbf6\",\r\n  measurementId: \"G-R8DJBH2Z7W\",\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport default firebase;\r\n","F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\Tests.js",["183","184"],"F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\TestCard.js",[],"F:\\Web\\work\\test-project\\src\\components\\Dashboard\\Tests\\NoData.js",["185"],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":25,"column":18,"nodeType":"192","messageId":"193","endLine":25,"endColumn":20},{"ruleId":"194","severity":1,"message":"195","line":26,"column":6,"nodeType":"196","endLine":26,"endColumn":16,"suggestions":"197"},{"ruleId":"190","severity":1,"message":"191","line":28,"column":19,"nodeType":"192","messageId":"193","endLine":28,"endColumn":21},{"ruleId":"190","severity":1,"message":"191","line":10,"column":27,"nodeType":"192","messageId":"193","endLine":10,"endColumn":29},{"ruleId":"190","severity":1,"message":"191","line":19,"column":22,"nodeType":"192","messageId":"193","endLine":19,"endColumn":24},{"ruleId":"190","severity":1,"message":"191","line":26,"column":18,"nodeType":"192","messageId":"193","endLine":26,"endColumn":20},{"ruleId":"194","severity":1,"message":"195","line":27,"column":6,"nodeType":"196","endLine":27,"endColumn":16,"suggestions":"198"},{"ruleId":"190","severity":1,"message":"191","line":29,"column":19,"nodeType":"192","messageId":"193","endLine":29,"endColumn":21},{"ruleId":"190","severity":1,"message":"191","line":48,"column":22,"nodeType":"192","messageId":"193","endLine":48,"endColumn":24},{"ruleId":"190","severity":1,"message":"191","line":74,"column":22,"nodeType":"192","messageId":"193","endLine":74,"endColumn":24},{"ruleId":"194","severity":1,"message":"199","line":18,"column":6,"nodeType":"196","endLine":18,"endColumn":8,"suggestions":"200"},{"ruleId":"190","severity":1,"message":"191","line":22,"column":18,"nodeType":"192","messageId":"193","endLine":22,"endColumn":20},{"ruleId":"194","severity":1,"message":"195","line":25,"column":6,"nodeType":"196","endLine":25,"endColumn":16,"suggestions":"201"},{"ruleId":"190","severity":1,"message":"191","line":11,"column":18,"nodeType":"192","messageId":"193","endLine":11,"endColumn":20},{"ruleId":"194","severity":1,"message":"195","line":14,"column":6,"nodeType":"196","endLine":14,"endColumn":16,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":1,"column":20,"nodeType":"205","messageId":"206","endLine":1,"endColumn":29},{"ruleId":"190","severity":1,"message":"191","line":37,"column":47,"nodeType":"192","messageId":"193","endLine":37,"endColumn":49},{"ruleId":"190","severity":1,"message":"207","line":31,"column":14,"nodeType":"192","messageId":"193","endLine":31,"endColumn":16},{"ruleId":"208","severity":1,"message":"209","line":7,"column":9,"nodeType":"210","endLine":7,"endColumn":59},{"ruleId":"208","severity":1,"message":"209","line":10,"column":7,"nodeType":"210","endLine":10,"endColumn":56},{"ruleId":"186","replacedBy":"211"},{"ruleId":"188","replacedBy":"212"},{"ruleId":"203","severity":1,"message":"213","line":2,"column":8,"nodeType":"205","messageId":"206","endLine":2,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":18,"column":18,"nodeType":"192","messageId":"193","endLine":18,"endColumn":20},{"ruleId":"194","severity":1,"message":"214","line":21,"column":6,"nodeType":"196","endLine":21,"endColumn":16,"suggestions":"215"},{"ruleId":"208","severity":1,"message":"209","line":6,"column":7,"nodeType":"210","endLine":6,"endColumn":45},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["218"],["219"],"React Hook useEffect has a missing dependency: 'setAppData'. Either include it or remove the dependency array. If 'setAppData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["220"],["221"],["222"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["216"],["217"],"'database' is defined but never used.","React Hook useEffect has missing dependencies: 'app.uid' and 'getAPITests'. Either include them or remove the dependency array.",["223"],"no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"224","fix":"226"},{"desc":"227","fix":"228"},{"desc":"224","fix":"229"},{"desc":"224","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [history, isLogged]",{"range":"233","text":"234"},{"range":"235","text":"234"},"Update the dependencies array to be: [setAppData]",{"range":"236","text":"237"},{"range":"238","text":"234"},{"range":"239","text":"234"},"Update the dependencies array to be: [app.uid, getAPITests, isLogged]",{"range":"240","text":"241"},[938,948],"[history, isLogged]",[940,950],[608,610],"[setAppData]",[753,763],[434,444],[582,592],"[app.uid, getAPITests, isLogged]"]